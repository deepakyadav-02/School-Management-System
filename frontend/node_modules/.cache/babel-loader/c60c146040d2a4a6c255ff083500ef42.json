{"ast":null,"code":"import { ALL_INCOME_FAIL, ALL_INCOME_REQUEST, ALL_INCOME_SUCCESS, ALL_SALARY_FAIL, ALL_SALARY_REQUEST, ALL_SALARY_SUCCESS } from '../constants/miscellaneousConstants';\nimport axios from 'axios';\nexport const particularMonthYear = (year, month) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allincome/${year}/${month}`);\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const particularYear = (year, month) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allincome/${year}`);\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const alltillNow = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allincome`);\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// salary\nexport const particularMonthYearSalary = (year, month) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allsalary/${year}/${month}`);\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const particularYearSalary = year => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allsalary/${year}`);\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const alltillNowSalary = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/teachers/allsalaries`);\n    console.log(\"data is\", data);\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["ALL_INCOME_FAIL","ALL_INCOME_REQUEST","ALL_INCOME_SUCCESS","ALL_SALARY_FAIL","ALL_SALARY_REQUEST","ALL_SALARY_SUCCESS","axios","particularMonthYear","year","month","dispatch","type","data","get","payload","error","response","message","particularYear","alltillNow","particularMonthYearSalary","particularYearSalary","alltillNowSalary","console","log"],"sources":["/Users/deepakyadav/Documents/IWT-Project 2.07.58 AM/frontend/src/actions/miscellaneousActions.js"],"sourcesContent":["import {\n  ALL_INCOME_FAIL,\n  ALL_INCOME_REQUEST,\n  ALL_INCOME_SUCCESS,\n  ALL_SALARY_FAIL,\n  ALL_SALARY_REQUEST,\n  ALL_SALARY_SUCCESS,\n} from '../constants/miscellaneousConstants'\nimport axios from 'axios'\nexport const particularMonthYear = (year, month) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allincome/${year}/${month}`)\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const particularYear = (year, month) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allincome/${year}`)\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const alltillNow = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_INCOME_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allincome`)\n    dispatch({\n      type: ALL_INCOME_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_INCOME_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n// salary\nexport const particularMonthYearSalary = (year, month) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allsalary/${year}/${month}`)\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const particularYearSalary = (year) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allsalary/${year}`)\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const alltillNowSalary = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: ALL_SALARY_REQUEST,\n    })\n    const { data } = await axios.get(`/api/teachers/allsalaries`)\n    console.log(\"data is\",data)\n    dispatch({\n      type: ALL_SALARY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ALL_SALARY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    //we need to send headers information so we declaring it inside the config\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n    localStorage.setItem(\"userCred\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n// this is for logging out of user\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userCred\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const Register = (name, email, password, image) => async dispatch => {\n  try {\n    dispatch({\n      type: \"ADMIN_REGISTER_REQUEST\"\n    });\n    //we need to send headers information so we declaring it inside the config\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/login/register\", {\n      name,\n      email,\n      password,\n      image\n    }, config);\n    dispatch({\n      type: \"ADMIN_REGISTER_SUCCESS\",\n      payload: data\n    });\n    console.log(\"succes\");\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n  } catch (error) {\n    dispatch({\n      type: \"ADMIN_REGISTER_FAIL\",\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","Register","name","image","console","log"],"sources":["/Users/deepakyadav/Documents/IWT-Project/frontend/src/actions/userActions.js"],"sourcesContent":["import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    //we need to send headers information so we declaring it inside the config\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/login\",\n      { email, password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n    localStorage.setItem(\"userCred\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n// this is for logging out of user\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userCred\");\n  dispatch({\n    type: USER_LOGOUT,\n  });}\n\n  export const Register =\n    (\n      name,\n     email,\n      password,\n\n      image\n    ) =>\n    async (dispatch) => {\n      try {\n        dispatch({\n          type: \"ADMIN_REGISTER_REQUEST\",\n        });\n        //we need to send headers information so we declaring it inside the config\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        };\n        const { data } = await axios.post(\n          \"/api/login/register\",\n          {\n            name,\n            email,\n            password,\n            image,\n          },\n          config\n        );\n        dispatch({\n          type: \"ADMIN_REGISTER_SUCCESS\",\n          payload: data,\n        });\n        console.log(\"succes\")\n        //we are getting  the json data from our backend request so we need to convert it into the\n        //string before we save them in our local storage of our  browser\n      } catch (error) {\n        dispatch({\n          type: \"ADMIN_REGISTER_FAIL\",\n          payload:\n            error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n        });\n      }\n    };\n\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,WAAW,QACN,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAER;IACR,CAAC,CAAC;IACF;;IAEA,MAAMS,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,YAAY,EACZ;MAAEP,KAAK;MAAEC;IAAS,CAAC,EACnBG,MAAM,CACP;IACDF,QAAQ,CAAC;MACPC,IAAI,EAAEP,kBAAkB;MACxBY,OAAO,EAAEF;IACX,CAAC,CAAC;IACF;IACA;IACAG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAET,eAAe;MACrBc,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AACD;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOd,QAAQ,IAAK;EACxCO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IACPC,IAAI,EAAEN;EACR,CAAC,CAAC;AAAC,CAAC;AAEJ,OAAO,MAAMqB,QAAQ,GACnB,CACEC,IAAI,EACLnB,KAAK,EACJC,QAAQ,EAERmB,KAAK,KAEP,MAAOlB,QAAQ,IAAK;EAClB,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;IACF;IACA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC/B,qBAAqB,EACrB;MACEY,IAAI;MACJnB,KAAK;MACLC,QAAQ;MACRmB;IACF,CAAC,EACDhB,MAAM,CACP;IACDF,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BK,OAAO,EAAEF;IACX,CAAC,CAAC;IACFe,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB;IACA;EACF,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAE,qBAAqB;MAC3BK,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}
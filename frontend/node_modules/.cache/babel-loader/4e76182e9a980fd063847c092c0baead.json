{"ast":null,"code":"import axios from 'axios';\nimport { TEACHER_DELETE_FAIL, TEACHER_DELETE_REQUEST, TEACHER_DELETE_SUCCESS, TEACHER_LIST_FAIL, TEACHER_LIST_REQUEST, TEACHER_LIST_SUCCESS, TEACHER_REGISTER_FAIL, TEACHER_REGISTER_REQUEST, TEACHER_REGISTER_SUCCESS, TEACHER_SALARY_FAIL, TEACHER_SALARY_REQUEST, TEACHER_SALARY_SUCCESS } from '../constants/teacherConstants';\nexport const PaySalary = (teachername, teacherid, salaryForTheYear, salaryForTheMonth, salaryAmount) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TEACHER_SALARY_REQUEST\n    });\n    const {\n      userLogin: {\n        userCred\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userCred.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/teachers/fees/${teachername}/${teacherid}`, {\n      salaryForTheYear,\n      salaryForTheMonth,\n      salaryAmount\n    }, config);\n    dispatch({\n      type: TEACHER_SALARY_SUCCESS,\n      payload: data\n    });\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n  } catch (error) {\n    dispatch({\n      type: TEACHER_SALARY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//TEACHER REGISTER\n\nexport const teacherregister = (teacher_name, qualification, address, contact_no, gender, previous_school, age, email, estimated_salary, image, subjectToTeach) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TEACHER_REGISTER_REQUEST\n    });\n    //we need to send headers information so we declaring it inside the config\n    const {\n      userLogin: {\n        userCred\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userCred.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/teachers/register', {\n      teacher_name,\n      qualification,\n      address,\n      contact_no,\n      gender,\n      previous_school,\n      age,\n      email,\n      estimated_salary,\n      image,\n      subjectToTeach\n    }, config);\n    dispatch({\n      type: TEACHER_REGISTER_SUCCESS,\n      payload: data\n    });\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n  } catch (error) {\n    dispatch({\n      type: TEACHER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//FOLLOWING IS FOR DELETING THE Teacher\n\nexport const deleteTeacher = id => async dispatch => {\n  try {\n    dispatch({\n      type: TEACHER_DELETE_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/teachers/delete/${id}`);\n    dispatch({\n      type: TEACHER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TEACHER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n//TEACHER all\n\nexport const listTeachers = () => async dispatch => {\n  try {\n    dispatch({\n      type: TEACHER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/teachers');\n    dispatch({\n      type: TEACHER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TEACHER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TEACHER_DELETE_FAIL","TEACHER_DELETE_REQUEST","TEACHER_DELETE_SUCCESS","TEACHER_LIST_FAIL","TEACHER_LIST_REQUEST","TEACHER_LIST_SUCCESS","TEACHER_REGISTER_FAIL","TEACHER_REGISTER_REQUEST","TEACHER_REGISTER_SUCCESS","TEACHER_SALARY_FAIL","TEACHER_SALARY_REQUEST","TEACHER_SALARY_SUCCESS","PaySalary","teachername","teacherid","salaryForTheYear","salaryForTheMonth","salaryAmount","dispatch","getState","type","userLogin","userCred","config","headers","Authorization","token","data","post","payload","error","response","message","teacherregister","teacher_name","qualification","address","contact_no","gender","previous_school","age","email","estimated_salary","image","subjectToTeach","deleteTeacher","id","delete","listTeachers","get"],"sources":["/Users/deepakyadav/Documents/IWT-Project/frontend/src/actions/teacherActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n  TEACHER_DELETE_FAIL,\n  TEACHER_DELETE_REQUEST,\n  TEACHER_DELETE_SUCCESS,\n  TEACHER_LIST_FAIL,\n  TEACHER_LIST_REQUEST,\n  TEACHER_LIST_SUCCESS,\n  TEACHER_REGISTER_FAIL,\n  TEACHER_REGISTER_REQUEST,\n  TEACHER_REGISTER_SUCCESS,\n  TEACHER_SALARY_FAIL,\n  TEACHER_SALARY_REQUEST,\n  TEACHER_SALARY_SUCCESS,\n} from '../constants/teacherConstants'\n\nexport const PaySalary = (\n  teachername,\n  teacherid,\n\n  salaryForTheYear,\n  salaryForTheMonth,\n  salaryAmount\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TEACHER_SALARY_REQUEST,\n    })\n    const {\n      userLogin: { userCred },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userCred.token}`,\n      },\n    }\n    const { data } = await axios.post(\n      `/api/teachers/fees/${teachername}/${teacherid}`,\n      {\n        salaryForTheYear,\n        salaryForTheMonth,\n        salaryAmount,\n      },\n      config\n    )\n    dispatch({\n      type: TEACHER_SALARY_SUCCESS,\n      payload: data,\n    })\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n  } catch (error) {\n    dispatch({\n      type: TEACHER_SALARY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//TEACHER REGISTER\n\nexport const teacherregister = (\n  teacher_name,\n\n  qualification,\n\n  address,\n\n  contact_no,\n  gender,\n  previous_school,\n\n  age,\n  email,\n  estimated_salary,\n  image,\n  subjectToTeach\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TEACHER_REGISTER_REQUEST,\n    })\n    //we need to send headers information so we declaring it inside the config\n    const {\n      userLogin: { userCred },\n    } = getState()\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userCred.token}`,\n      },\n    }\n    const { data } = await axios.post(\n      '/api/teachers/register',\n      {\n        teacher_name,\n\n        qualification,\n\n        address,\n\n        contact_no,\n        gender,\n        previous_school,\n\n        age,\n        email,\n        estimated_salary,\n        image,\n        subjectToTeach,\n      },\n      config\n    )\n    dispatch({\n      type: TEACHER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    //we are getting  the json data from our backend request so we need to convert it into the\n    //string before we save them in our local storage of our  browser\n  } catch (error) {\n    dispatch({\n      type: TEACHER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//FOLLOWING IS FOR DELETING THE Teacher\n\nexport const deleteTeacher = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: TEACHER_DELETE_REQUEST,\n    })\n    const { data } = await axios.delete(`/api/teachers/delete/${id}`)\n    dispatch({\n      type: TEACHER_DELETE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TEACHER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n//TEACHER all\n\nexport const listTeachers = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: TEACHER_LIST_REQUEST,\n    })\n    const { data } = await axios.get('/api/teachers')\n    dispatch({\n      type: TEACHER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: TEACHER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}